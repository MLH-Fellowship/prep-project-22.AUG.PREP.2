{"version":3,"sources":["mlh-prep.png","Components/Error.js","Components/Results.js","Components/Search.js","assets/img/cap.png","assets/img/gloves.png","assets/img/jacket.png","assets/img/raincoat.png","assets/img/scarf.png","assets/img/sunglasses.png","assets/img/suncream.png","assets/img/umbrella.png","assets/img/water_proof_boots.png","assets/img/watch.png","assets/img/goggles.png","assets/img/flashlight.png","assets/img/mask.png","Components/RequiredItems.js","Components/GetMyLocationButton.js","Components/Map.js","Components/App.js","index.js"],"names":["ErrorComponent","error","message","ResultsComponent","isLoaded","results","className","console","log","weather","main","feels_like","name","sys","country","suggestionElementContainer","maxWidth","margin","color","marginTop","SearchComponent","city","changeCity","React","useState","lat","lng","setCoordinates","handleSelect","value","a","geocodeByAddress","getLatLng","latLng","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","style","map","suggestion","backgroundColor","active","description","RequiredItems","weatherKind","getItems","x","RainCoat","WaterProofBoots","Umbrella","SunGlasses","Gloves","Jacket","Scarf","Cap","SunCream","Watch","Goggles","FlashLight","Mask","undefined","ele","index","src","alt","SearchMyLocationButton","getUserLocation","onClick","Map","setIsLoaded","setResults","setError","mapContainer","useRef","zoom","useEffect","current","mapboxgl","container","center","on","e","fetch","lngLat","process","REACT_APP_APIKEY","then","res","json","result","ref","App","setCity","background","setBackground","logo","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","pos","coords","latitude","lon","longitude","accessToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd962636.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mlh-prep.270f6887.png\";","\nexport default function ErrorComponent({error}) {\n  return (\n    <div>Error: {error.message}</div>\n  )\n}","import \"../assets/styles/Results.css\"\n\nexport default function ResultsComponent({isLoaded, results}) {\n\n  return (\n      <div className=\"Results\">\n        {!isLoaded && <h2>Loading...</h2>}\n        {console.log(results)}\n        {isLoaded && results && <>\n          <h3>{results.weather[0].main}</h3>\n          <p>Feels like {results.main.feels_like}Â°C</p>\n          <i><p>{results.name}, {results.sys.country}</p></i>\n        </>}\n      </div>\n  )\n}\n","import React from \"react\";\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng\n  } from \"react-places-autocomplete\";\nimport \"../assets/styles/Search.css\"\n  let suggestionElementContainer = {\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    color: \"#2b2929\",\n    marginTop: \"5px\"\n  }\n\nexport default function SearchComponent({city, changeCity}) {\n    //const [city, setCity] = React.useState(\"\");\n    const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n    });\n    const handleSelect = async value => {\n        const results = await geocodeByAddress(value);\n        const latLng = await getLatLng(results[0]);\n        changeCity(value);\n        setCoordinates(latLng);\n      };\n      \n    return (\n        <div>\n      <PlacesAutocomplete\n        value={city}\n        onChange={changeCity}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            {/* <p>Latitude: {coordinates.lat}</p>\n            <p>Longitude: {coordinates.lng}</p> */}\n\n            <input className=\"search-input\" {...getInputProps({ placeholder: \"Type city\" })} \n             />\n\n            <div style={suggestionElementContainer}>\n              {loading ? <div>...loading</div> : null}\n\n              {suggestions.map(suggestion => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#86c9e3\" : \"#fff\"\n                }\n\n                return (\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\n                    {suggestion.description}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/cap.474e6898.png\";","export default __webpack_public_path__ + \"static/media/gloves.45497ed2.png\";","export default __webpack_public_path__ + \"static/media/jacket.58fadea5.png\";","export default __webpack_public_path__ + \"static/media/raincoat.376a8ef2.png\";","export default __webpack_public_path__ + \"static/media/scarf.fbb31feb.png\";","export default __webpack_public_path__ + \"static/media/sunglasses.6c5f1538.png\";","export default __webpack_public_path__ + \"static/media/suncream.d8793979.png\";","export default __webpack_public_path__ + \"static/media/umbrella.df170598.png\";","export default __webpack_public_path__ + \"static/media/water_proof_boots.a48e94f8.png\";","export default __webpack_public_path__ + \"static/media/watch.f0a65ecb.png\";","export default __webpack_public_path__ + \"static/media/goggles.faf692a2.png\";","export default __webpack_public_path__ + \"static/media/flashlight.6563cb05.png\";","export default __webpack_public_path__ + \"static/media/mask.e0e07086.png\";","import \"../assets/styles/RequiredItems.css\"\nimport Cap from '../assets/img/cap.png'\nimport Gloves from '../assets/img/gloves.png' \nimport Jacket from '../assets/img/jacket.png'\nimport RainCoat from '../assets/img/raincoat.png' \nimport Scarf from '../assets/img/scarf.png' \nimport SunGlasses from '../assets/img/sunglasses.png' \nimport SunCream from '../assets/img/suncream.png' \nimport Umbrella from '../assets/img/umbrella.png' \nimport WaterProofBoots from '../assets/img/water_proof_boots.png' \nimport Watch from '../assets/img/watch.png'\nimport Goggles from '../assets/img/goggles.png'\nimport FlashLight from '../assets/img/flashlight.png'\nimport Mask from '../assets/img/mask.png'\n\n\nconst RequiredItems = ({ weatherKind }) => {\n    \n    const getItems = (x) => {\n        switch(x) {\n            case 'Rain':\n                return [RainCoat, WaterProofBoots, Umbrella]\n            case 'Snow': \n                return [SunGlasses, Gloves, Jacket, Scarf]\n            case 'Clear':\n                return [SunGlasses, Cap, SunCream]\n            case 'Clouds':\n                return [Cap, Watch]\n            case 'Tornado':\n                return [Goggles, FlashLight]\n            case 'Drizzle':\n                return [RainCoat, Umbrella, WaterProofBoots]\n            case 'Thunderstorm':\n                return [RainCoat, FlashLight, WaterProofBoots]\n            case 'Squall':\n            case 'Ash':\n            case 'Dust':\n            case 'Sand':\n            case 'Fog':\n            case 'Haze':\n            case 'Smoke':\n            case 'Mist':\n                return [Watch, Goggles, Mask]\n            default:\n                return undefined\n        }\n    }\n\n    return (\n        <div className='items-container'>\n            {\n                getItems(weatherKind) !== undefined && \n                getItems(weatherKind).map((ele, index) => { \n                    return (\n                        <div key={index} className=\"items-card\">\n                            <img src={ele} alt=\"required item\" />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default RequiredItems\n","export default function SearchMyLocationButton({getUserLocation}) {\n    return (\n      <button onClick={getUserLocation} className=\"get-user-loc-btn\">Get My Location</button>\n    )\n  }","import { useEffect, useState, useRef } from \"react\";\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax \nimport \"../assets/styles/Map.css\"\nmapboxgl.accessToken = 'pk.eyJ1Ijoicm95Z2JldiIsImEiOiJjbDFjYzF2ajUwMHgzM2NwcXBzdWVxM3ZvIn0.2k8N-UN2Y7ZdT5vwml9QAw';\n\nexport default function Map({ setIsLoaded, setResults, setError }) {\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng, setLng] = useState(-70.9);\n    const [lat, setLat] = useState(42.35);\n    const [zoom, setZoom] = useState(9);\n\n    useEffect(() => { // mapbox\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n    });\n\n    map.current.on('click', (e) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${e.lngLat.lat}&lon=${e.lngLat.lng}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\n        .then(res => res.json())\n        .then(\n        (result) => {\n            if (result['cod'] !== 200) {\n            setIsLoaded(false)\n            } else {\n            setIsLoaded(true);\n            setResults(result);\n            }\n        },\n        (error) => {\n            setIsLoaded(true);\n            setError(error);\n        }\n        )\n    });\n    }, []);\n\n    return (\n        <>\n          <div ref={mapContainer} className=\"map-container\" />\n        </>\n    )\n}","import { useEffect, useState } from \"react\";\nimport '../assets/styles/App.css';\nimport logo from '../mlh-prep.png';\nimport ErrorComponent from \"./Error\";\nimport ResultsComponent from \"./Results\";\nimport SearchComponent from \"./Search\";\nimport RequiredItems from \"./RequiredItems\";\nimport GetMyLocationButton from \"./GetMyLocationButton\";\nimport Map from \"./Map\";\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [city, setCity] = useState(\"New York City\")\n  const [results, setResults] = useState(null);\n  const [background, setBackground] = useState(\"\")\n\n  // Fetch data based on geolocation\n  function getUserLocation() {\n    setIsLoaded(false);\n\n    // Use Geolocation API to locate user coordinates\n    const geolocateUser = new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(function (pos) {\n        let lat = pos.coords.latitude\n        let lon = pos.coords.longitude\n        resolve({ lat, lon });\n      }, error)\n    })\n\n    // Use coordinates to fetch weather\n    geolocateUser.then(res => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${res.lat}&lon=${res.lon}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\n      .then(res => res.json())\n      .then((result) => {\n        setIsLoaded(true)\n        setCity(result.name)\n        setResults(result)\n      },\n      (error) => {\n        setIsLoaded(true)\n        setError(error)\n      })\n    })\n  }\n\n  // Fetch data based on user input\n  useEffect(() => { // weather\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result['cod'] !== 200) {\n            setIsLoaded(false)\n          } else {\n            setIsLoaded(true)\n            setResults(result)\n            setBackground(result.weather[0].main)\n          }\n        },\n        (error) => {\n          setIsLoaded(true)\n          setError(error)\n        }\n      )\n  }, [city])\n\n  if (error) {\n    return <ErrorComponent error={error} />;\n  } else {\n    return (\n      <>\n        <div className={(isLoaded && results) ? background : undefined}>\n          <img className=\"logo\" src={logo} alt=\"MLH Prep Logo\"></img>\n          <h2>Enter a city below ð</h2>\n          <SearchComponent city={city} changeCity={setCity} />\n          <GetMyLocationButton getUserLocation={getUserLocation}/>\n          <div className=\"card-container\">\n            <ResultsComponent isLoaded={isLoaded} results={results}/>\n            {isLoaded && results && <RequiredItems weatherKind={results.weather[0].main} />}\n          </div>\n          <Map setIsLoaded={setIsLoaded} setResults={setResults} setError={setError} />\n        </div>\n      </>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}